name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '2.7', '3.6', '3.7', '3.8', '3.9', '3.10' ]
    name: Test ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install
        run: |
         pip install pytest pytest-coverage codecov
         pip install -e ./
      - name: Run tests
        run: pytest -v tests.py --cov magicattr --cov-report xml
      - name: Run codecov
        run: codecov
        
  test_arm64: 
     runs-on: ubuntu-latest
     strategy:
      matrix:
        python-version: [ 3.8]
      fail-fast: false
     steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Install and Run tests
        run: |
               docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
               arm64v8/ubuntu:20.04 \
               bash -exc 'apt-get update && apt-get -y install python3.8 curl git && \
                ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
                apt-get -y install software-properties-common && add-apt-repository ppa:deadsnakes/ppa && apt-get -y update && \
                apt install -y python3.8-venv && python3.8 -m venv venv38 && source venv38/bin/activate && \
                python3.8 -m pip install --upgrade pip && \
                python3.8 --version && \
                uname -m && \
                python3.8 -m pip install pytest pytest-coverage codecov && \
                python3.8 -m pip install -e ./ && \
                pytest -v tests.py --cov magicattr --cov-report xml && \
                codecov && \
                deactivate'
